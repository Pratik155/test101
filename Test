from PIL import Image, ImageDraw, ImageFont

# Create a blank image with the specified dimensions
image_width = 1920
image_height = 1080
image = Image.new("RGB", (image_width, image_height), "white")
draw = ImageDraw.Draw(image)

# Define box dimensions and spacing
box_width = image_width // 5
box_height = (image_height // 2) - 20  # Subtract some padding for spacing
box_padding = 10
box_x = 0
box_y = image_height // 2

# Dummy data for box content
box_data = [
    {"heading": "Box 1", "content": "Lorem ipsum dolor sit amet"},
    {"heading": "Box 2", "content": "consectetur adipiscing elit"},
    {"heading": "Box 3", "content": "sed do eiusmod tempor incididunt"},
    {"heading": "Box 4", "content": "ut labore et dolore magna aliqua"},
    {"heading": "Box 5", "content": "Ut enim ad minim veniam"},
]

# Define font and size for text
font = ImageFont.truetype("arial.ttf", 20)

# Draw each box with its content
for data in box_data:
    # Calculate text size for content
    content_width, content_height = draw.textsize(data["content"], font=font)

    # Calculate box size based on content size
    box_width = max(content_width + 20, box_width)  # Add padding for content
    box_height = content_height + 60  # Add some padding for heading and spacing

    # Draw box
    draw.rectangle([box_x, box_y, box_x + box_width, box_y + box_height], outline="black")
    
    # Draw heading
    draw.text((box_x + 10, box_y + 10), data["heading"], fill="black", font=font)

    # Draw content
    draw.text((box_x + 10, box_y + 40), data["content"], fill="black", font=font)

    # Update box position for next iteration
    box_x += box_width + box_padding

# Save the image
image.save("image_with_boxes.png")
