from sklearn.feature_extraction.text import CountVectorizer
from sklearn.metrics.pairwise import cosine_similarity
import pandas as pd

# Define stopwords
stop_words = set([
    "i", "me", "my", "myself", "we", "our", "ours", "ourselves", "you", "your", "yours", "yourself", "yourselves",
    "he", "him", "his", "himself", "she", "her", "hers", "herself", "it", "its", "itself", "they", "them", "their",
    "theirs", "themselves", "what", "which", "who", "whom", "this", "that", "these", "those", "am", "is", "are",
    "was", "were", "be", "been", "being", "have", "has", "had", "having", "do", "does", "did", "doing", "a", "an",
    "the", "and", "but", "if", "or", "because", "as", "until", "while", "of", "at", "by", "for", "with", "about",
    "against", "between", "into", "through", "during", "before", "after", "above", "below", "to", "from", "up",
    "down", "in", "out", "on", "off", "over", "under", "again", "further", "then", "once", "here", "there", "when",
    "where", "why", "how", "all", "any", "both", "each", "few", "more", "most", "other", "some", "such", "no",
    "nor", "not", "only", "own", "same", "so", "than", "too", "very", "s", "t", "can", "will", "just", "don",
    "should", "now"
])

# Example DataFrames
# df1 = pandas DataFrame with a column 'Sentences'
# df2 = pandas DataFrame with a column 'Categories'

# Initialize CountVectorizer
vectorizer = CountVectorizer(stop_words=stop_words)

# Fit and transform the 'Sentences' from df1
X = vectorizer.fit_transform(df1['Sentences'])

# Transform 'Categories' from df2
Y = vectorizer.transform(df2['Categories'])

# Compute cosine similarity between X and Y
cos_sim = cosine_similarity(X, Y)

# Find the index of the most similar category for each sentence
max_sim_idx = cos_sim.argmax(axis=1)

# Map sentences to categories
mapped_categories = df2.iloc[max_sim_idx]['Categories']

# Add mapped categories to df1
df1['Mapped_Categories'] = mapped_categories.values

# Display the result
print(df1)
