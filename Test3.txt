import pyaudio
import wave
import pyscreenshot as ImageGrab
import numpy as np
import cv2

# Set up audio recording parameters
FORMAT = pyaudio.paInt16
CHANNELS = 2
RATE = 44100
CHUNK = 1024
RECORD_SECONDS = 5
WAVE_OUTPUT_FILENAME = "output.wav"

# Initialize PyAudio
audio = pyaudio.PyAudio()

# Open audio stream
stream = audio.open(format=FORMAT, channels=CHANNELS,
                    rate=RATE, input=True,
                    frames_per_buffer=CHUNK)

print("Recording audio...")

frames = []

# Record audio
for i in range(0, int(RATE / CHUNK * RECORD_SECONDS)):
    data = stream.read(CHUNK)
    frames.append(data)

print("Finished recording audio.")

# Stop audio stream
stream.stop_stream()
stream.close()
audio.terminate()

# Save audio to file
with wave.open(WAVE_OUTPUT_FILENAME, 'wb') as wf:
    wf.setnchannels(CHANNELS)
    wf.setsampwidth(audio.get_sample_size(FORMAT))
    wf.setframerate(RATE)
    wf.writeframes(b''.join(frames))

print("Audio saved to", WAVE_OUTPUT_FILENAME)

# Capture screen
print("Capturing screen...")

# Get screen resolution
screen = ImageGrab.grab()
width, height = screen.size

# Set video codec and output file
fourcc = cv2.VideoWriter_fourcc(*'XVID')
out = cv2.VideoWriter('output.avi', fourcc, 20.0, (width, height))

# Record screen
while True:
    img = ImageGrab.grab()
    frame = np.array(img)
    frame = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
    out.write(frame)
    cv2.imshow("Screen Recording", frame)
    if cv2.waitKey(1) == ord("q"):
        out.release()  # Release video writer
        break

cv2.destroyAllWindows()

print("Screen recording saved to output.avi")
